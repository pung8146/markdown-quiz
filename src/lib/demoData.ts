export interface DemoQuiz {
  id: string;
  title: string;
  content: string;
}

export const demoQuizzes: DemoQuiz[] = [
  {
    id: 'react-basics',
    title: 'React 기초 개념',
    content: `# React 기초 개념

React는 Facebook에서 개발한 JavaScript 라이브러리입니다. 사용자 인터페이스를 구축하기 위해 설계되었으며, 컴포넌트 기반 아키텍처를 사용합니다.

## 주요 특징

### 컴포넌트 기반
React는 재사용 가능한 컴포넌트를 통해 UI를 구성합니다. 각 컴포넌트는 독립적이며 자체적인 상태를 가질 수 있습니다.

### Virtual DOM
React는 Virtual DOM을 사용하여 성능을 최적화합니다. 실제 DOM 조작을 최소화하여 빠른 렌더링을 제공합니다.

### 단방향 데이터 흐름
React는 단방향 데이터 흐름을 따릅니다. 데이터는 부모 컴포넌트에서 자식 컴포넌트로만 전달됩니다.

## 기본 개념

### JSX
JSX는 JavaScript XML의 줄임말로, JavaScript 코드 안에서 HTML과 유사한 문법을 사용할 수 있게 해줍니다.

### Props
Props는 컴포넌트에 전달되는 데이터입니다. 읽기 전용이며 컴포넌트 간의 데이터 전달에 사용됩니다.

### State
State는 컴포넌트의 내부 상태를 나타냅니다. useState Hook을 사용하여 관리할 수 있습니다.`,
  },
  {
    id: 'python-basics',
    title: 'Python 프로그래밍 기초',
    content: `# Python 프로그래밍 기초

Python은 1991년 귀도 반 로섬이 개발한 고급 프로그래밍 언어입니다. 간결하고 읽기 쉬운 문법으로 유명하며, 다양한 분야에서 널리 사용됩니다.

## Python의 특징

### 간단한 문법
Python은 영어와 유사한 문법을 사용하여 코드를 쉽게 읽고 이해할 수 있습니다.

### 인터프리터 언어
Python은 인터프리터 언어로, 코드를 한 줄씩 실행하여 디버깅이 쉽습니다.

### 객체지향 프로그래밍
Python은 객체지향 프로그래밍을 지원하며, 클래스와 객체를 사용할 수 있습니다.

## 활용 분야

### 웹 개발
Django, Flask 등의 프레임워크를 사용하여 웹 애플리케이션을 개발할 수 있습니다.

### 데이터 분석
Pandas, NumPy 등의 라이브러리를 사용하여 데이터 분석 작업을 수행할 수 있습니다.

### 인공지능
TensorFlow, PyTorch 등을 사용하여 머신러닝과 딥러닝 모델을 개발할 수 있습니다.

### 자동화
스크립트를 작성하여 반복적인 작업을 자동화할 수 있습니다.`,
  },
  {
    id: 'javascript-es6',
    title: 'JavaScript ES6+ 기능',
    content: `# JavaScript ES6+ 기능

ES6(ECMAScript 2015)는 JavaScript의 중요한 업데이트로, 많은 새로운 기능과 문법을 도입했습니다.

## 주요 기능

### let과 const
기존의 var 대신 let과 const를 사용하여 블록 스코프 변수를 선언할 수 있습니다.

- let: 재할당 가능한 변수
- const: 재할당 불가능한 상수

### 화살표 함수
화살표 함수는 기존 function 키워드보다 간결한 문법을 제공합니다.

### 템플릿 리터럴
백틱(\`)을 사용하여 문자열 내에 변수를 삽입할 수 있습니다.

### 구조 분해 할당
배열이나 객체에서 값을 추출하여 변수에 할당하는 간편한 방법입니다.

### 클래스
ES6에서 클래스 문법이 도입되어 객체지향 프로그래밍이 더 쉬워졌습니다.

### 모듈
import와 export를 사용하여 모듈을 가져오고 내보낼 수 있습니다.

### Promise
비동기 작업을 더 효율적으로 처리할 수 있는 Promise가 도입되었습니다.

### async/await
Promise를 더 간단하게 사용할 수 있는 async/await 문법이 추가되었습니다.`,
  },
  {
    id: 'web-development',
    title: '웹 개발 기초',
    content: `# 웹 개발 기초

웹 개발은 인터넷에서 동작하는 웹사이트와 웹 애플리케이션을 만드는 과정입니다.

## 프론트엔드 개발

### HTML
HTML(HyperText Markup Language)은 웹페이지의 구조를 정의하는 마크업 언어입니다.

### CSS
CSS(Cascading Style Sheets)는 웹페이지의 스타일과 레이아웃을 정의합니다.

### JavaScript
JavaScript는 웹페이지에 동적인 기능을 추가하는 프로그래밍 언어입니다.

## 백엔드 개발

### 서버
서버는 클라이언트의 요청을 처리하고 응답을 제공하는 컴퓨터 시스템입니다.

### 데이터베이스
데이터베이스는 웹 애플리케이션에서 사용하는 데이터를 저장하고 관리합니다.

### API
API(Application Programming Interface)는 서로 다른 소프트웨어 구성 요소 간의 통신을 가능하게 합니다.

## 개발 도구

### 텍스트 에디터
Visual Studio Code, Sublime Text 등의 에디터를 사용하여 코드를 작성합니다.

### 버전 관리
Git을 사용하여 코드의 변경사항을 추적하고 관리합니다.

### 브라우저 개발자 도구
브라우저의 개발자 도구를 사용하여 디버깅과 최적화를 수행합니다.`,
  },
  {
    id: 'data-structures',
    title: '자료구조와 알고리즘',
    content: `# 자료구조와 알고리즘

자료구조는 데이터를 효율적으로 저장하고 관리하는 방법이며, 알고리즘은 문제를 해결하는 단계적 절차입니다.

## 기본 자료구조

### 배열(Array)
배열은 같은 타입의 데이터를 연속적인 메모리 공간에 저장하는 자료구조입니다.

특징:
- 인덱스를 통한 빠른 접근 (O(1))
- 크기가 고정적
- 삽입/삭제 시 O(n) 시간 복잡도

### 연결 리스트(Linked List)
연결 리스트는 노드들이 포인터로 연결된 자료구조입니다.

특징:
- 동적 크기 조절 가능
- 삽입/삭제가 O(1)
- 순차 접근만 가능 (O(n))

### 스택(Stack)
스택은 LIFO(Last In, First Out) 방식으로 동작하는 자료구조입니다.

주요 연산:
- push: 데이터 삽입
- pop: 데이터 제거
- top: 최상단 데이터 확인

### 큐(Queue)
큐는 FIFO(First In, First Out) 방식으로 동작하는 자료구조입니다.

주요 연산:
- enqueue: 데이터 삽입
- dequeue: 데이터 제거
- front: 첫 번째 데이터 확인

## 정렬 알고리즘

### 버블 정렬
인접한 두 원소를 비교하여 정렬하는 간단한 알고리즘입니다.
시간 복잡도: O(n²)

### 선택 정렬
가장 작은 원소를 선택하여 정렬하는 알고리즘입니다.
시간 복잡도: O(n²)

### 퀵 정렬
분할 정복 방식을 사용하는 효율적인 정렬 알고리즘입니다.
평균 시간 복잡도: O(n log n)`,
  },
];
